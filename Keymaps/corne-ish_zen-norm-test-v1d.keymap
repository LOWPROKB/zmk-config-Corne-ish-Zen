/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
     tapping-term-ms = <400>;
 };
 
/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "NORMAN";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  D  |  F  |  K  |   |  J  |  U   |  R  |  L  |  ;  | BSPC |
// | MO-3 |  A  |  S  |  E  |  T  |  G  |   |  Y  |  N   |  I  |  O  |  H  |ENTER |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  P  |  M   |  ,  |  .  |  /  | RSFT |
//                    | GUI | LWR | SPC |   | ENT | BSPC | MO-1 |
                        bindings = <
   &kp TAB   &kp Q &kp W &kp D &kp F &kp K    &kp J &kp U &kp R    &kp L   &kp SEMI    &kp BSPC
   &mo 3     &kp A &kp S &kp E &kp T &kp G    &kp Y &kp N &kp I    &kp O   &kp H    &kp ENTER
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B    &kp P &kp M &kp CMMA &kp DOT &kp FSLH &kp RSFT
                   &mo 2 &kp LGUI &kp SPACE   &kp ENTER &kp BSPC &mo 1
                        >;
                };
                adj_layer {
                        label = "ADJ";
// -----------------------------------------------------------------------------------------
// | RESET|     |     |     |     |     |   |     |     |     |     |     |      |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | Vol+|     |     |     |     |      |Vol+
// |      |     |     |     |     |     |   | Vol-| MUTE| PREV| NEXT|     |      |Vol-
//                    |     |     |     |   | Play| MUTE|     |
                        bindings = <
   &reset     &none        &none        &none        &none        &none         &none        &none      &none      &none      &none &none
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &kp C_VOL_UP &none      &none      &none      &none &kp C_VOL_UP
   &none      &none        &none        &none        &none        &none         &kp C_VOL_DN &kp K_MUTE &kp C_PREV &kp C_NEXT &none &kp C_VOL_DN
                          	        	&none     	 &none        &none      	&kp C_PP     &kp K_MUTE &trans
                        >;
                };

                num_layer {
                        label = "NUM";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
                
                nav_layer {
                        label = "NAV";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
                
                func_layer {
                        label = "FUNC";
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
